@model PaginatedList<CSD412GroupCWebApp.Models.Article>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <img src="~/image/bg-header-sized.jpg" style="width:100%; float:left;padding-left:0px;" />
    <h1 class="display-4">Welcome to Group C Project</h1>
    <p class="text-left">
        <h3>Project Title: Posting Blog</h3>
        Groups Team Members: Nathan Obrien, Noah Greer, & Sareh Akbarpour
    </p>
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by Title: <input type="text" style="width:45%" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-info" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Default.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Default.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Default.ArticleCategories)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Default.DatePosted)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    <a asp-controller="Articles" asp-action="Display" asp-route-id="@item.UrlSlug">
                        @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.Name)
                </td>
                <td>
                    @String.Join(", ", item.ArticleCategories.Select(c => c.Category.Name))
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DatePosted)
                </td>
            </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-info @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-info @nextDisabled">
        Next
    </a>
</div>
