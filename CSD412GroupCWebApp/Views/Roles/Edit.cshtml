@model CSD412GroupCWebApp.Models.RoleViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Update role @Model.Role.Name</h4>
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">

            <input type="hidden" asp-for="Role.Id" />
            <input type="hidden" asp-for="Role.Name" />

            <h4>Users not in role @Model.Role.Name</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Role.Name)
                        </th>
                        <th>Add user to role @Model.Role.Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.NonMembers)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => user.Name)
                        </td>
                        <td>
                        @if (!user.Email.Equals(Constants.OwnerEmailAddress))
                        {
                            <input type="checkbox" name="AddedUserIds" value="@user.Id">
                        }
                        </td>
                    </tr>
                    }
                </tbody>
            </table>

            <h4>Users in role @Model.Role.Name</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Role.Name)
                        </th>
                        <th>Remove user from role @Model.Role.Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Members)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => user.Name)
                        </td>
                        <td>
                        @if (!user.Email.Equals(Constants.OwnerEmailAddress))
                        {
                            <input type="checkbox" name="RemovedUserIds" value="@user.Id">
                        }
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
